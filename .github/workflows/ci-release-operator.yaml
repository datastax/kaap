name: Release Operator

on:
  push:
    tags:
      - 'operator-*'
  workflow_dispatch: # Manual Trigger
    inputs:
      docker_tag:
        description: 'Docker tag to use'
        required: true
        default: 'dev'

jobs:
  release-operator:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get the tag
        run: |
          TAG=${GITHUB_REF/refs\/tags\/operator-/}
          if [[ $TAG == "master" ]]; then
            TAG=latest
          fi
          MANUAL_WORKFLOW_TAG=${{ inputs.docker_tag }}
          if [[ $MANUAL_WORKFLOW_TAG != "" ]]; then
            TAG=${{ inputs.docker_tag }}
          fi
          echo "TAG=${TAG}" >> "$GITHUB_ENV"
          echo "Using tag $TAG"

          mvn clean install -DskipTests -Pskip-crds -Pskip-docker

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: false
          context: operator
          tags: docker.io/datastax/kaap:${{ env.TAG }},latest

      # - uses: ncipollo/release-action@v1
      - if: ${{ inputs.docker_tag == '' }} # If not manual workflow
        # with:
        #   artifacts: "migration-tool/target/kaap-migration-tool-*.jar,helm/kaap/crds/*.yml"
        #   token: ${{ secrets.GITHUB_TOKEN }}
        #   generateReleaseNotes: true
        run: |
          echo "Running this now"