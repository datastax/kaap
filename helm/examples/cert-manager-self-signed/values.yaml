#
#
# Copyright DataStax, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

kaap:
  cluster:
    create: true
    spec:
      global:
        name: pulsar
        image: datastax/lunastreaming-all:2.10_3.4
        restartOnConfigMapChange: true
        # dnsName: add here your public dns name
        tls:
          enabled: true
          zookeeper:
            enabled: true
            secretName: zk-tls
          bookkeeper:
            enabled: true
            secretName: bk-tls
          autorecovery:
            enabled: true
            secretName: autorecovery-tls
          proxy:
            enabled: true
            enabledWithBroker: true
            secretName: proxy-tls
          broker:
            enabled: true
            secretName: broker-tls
          functionsWorker:
            enabled: true
            enabledWithBroker: true
            secretName: fnw-tls
          certProvisioner:
            selfSigned:
              enabled: true
              perComponent: true
              zookeeper:
                generate: true
              broker:
                generate: true
              bookkeeper:
                generate: true
              autorecovery:
                generate: true
              proxy:
                generate: true
              functionsWorker:
                generate: true
        storage:
          existingStorageClassName: default
      zookeeper:
        replicas: 1
        dataVolume:
          name: data
          size: 100M
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      bookkeeper:
        replicas: 1
        volumes:
          journal:
            size: 1Gi
          ledgers:
            size: 1Gi
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      broker:
        replicas: 1
        config:
          managedLedgerDefaultAckQuorum: "1"
          managedLedgerDefaultEnsembleSize: "1"
          managedLedgerDefaultWriteQuorum: "1"
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      proxy:
        replicas: 1
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
        service:
        # type: LoadBalancer -> enable load balancer on the proxy
      autorecovery:
        replicas: 1
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      bastion:
        replicas: 1
        resources:
          requests:
            cpu: "0.2"
            memory: "128Mi"
      functionsWorker:
        replicas: 1
        runtime: kubernetes
        config:
          numFunctionPackageReplicas: 1
          functionInstanceMaxResources:
            disk: 10000000000
            ram: 500000000
            cpu: 0.3
        resources:
          requests:
            cpu: "0.3"

cert-manager:
  enabled: true
