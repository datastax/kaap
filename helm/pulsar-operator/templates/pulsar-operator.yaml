---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /q/metrics
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
  labels:
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/name: {{ .Chart.Name }}
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.operator.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /q/metrics
        prometheus.io/port: "8080"
        prometheus.io/scheme: http
      labels:
        app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
        app.kubernetes.io/name: {{ .Chart.Name }}
      namespace: {{ .Release.Namespace }}
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: {{ .Values.operator.image }}
          imagePullPolicy: {{ .Values.operator.imagePullPolicy }}
          livenessProbe:
            failureThreshold: {{ .Values.operator.livenessProbe.failureThreshold }}
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: {{ .Values.operator.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.operator.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.operator.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.operator.livenessProbe.timeoutSeconds }}
          name: pulsar-operator
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: {{ .Values.operator.readinessProbe.failureThreshold }}
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: {{ .Values.operator.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.operator.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.operator.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.operator.readinessProbe.timeoutSeconds }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
